diff --git a/extension.js b/extension.js
index 92d07a0..158f47e 100644
--- a/extension.js
+++ b/extension.js
@@ -322,49 +322,6 @@ const ResourceMonitor = GObject.registerClass(
         style_class: "system-status-icon",
       });
 
-      // Unit
-      this._cpuTemperatureUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "Â°C",
-      });
-      this._cpuTemperatureUnit.set_style("padding-left: 0.125em;");
-
-      this._cpuFrequencyUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "KHz",
-      });
-      this._cpuFrequencyUnit.set_style("padding-left: 0.125em;");
-
-      this._cpuUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "%",
-      });
-      this._cpuUnit.set_style("padding-left: 0.125em;");
-
-      this._ramUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: this._ramUnitType ? "%" : "KB",
-      });
-      this._ramUnit.set_style("padding-left: 0.125em;");
-
-      this._swapUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: this._swapUnitType ? "%" : "KB",
-      });
-      this._swapUnit.set_style("padding-left: 0.125em;");
-
-      this._ethUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._ethUnit.set_style("padding-left: 0.125em;");
-
-      this._wlanUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._wlanUnit.set_style("padding-left: 0.125em;");
-
       // Value
       this._cpuValue = new St.Label({
         y_align: Clutter.ActorAlign.CENTER,
@@ -471,15 +428,12 @@ const ResourceMonitor = GObject.registerClass(
               case "cpu":
                 this._box.add_child(this._cpuIcon);
                 this._box.add_child(this._cpuValue);
-                this._box.add_child(this._cpuUnit);
 
                 this._box.add_child(this._cpuTemperatureBracketStart);
                 this._box.add_child(this._cpuTemperatureValue);
-                this._box.add_child(this._cpuTemperatureUnit);
                 this._box.add_child(this._cpuTemperatureBracketEnd);
                 this._box.add_child(this._cpuFrequencyBracketStart);
                 this._box.add_child(this._cpuFrequencyValue);
-                this._box.add_child(this._cpuFrequencyUnit);
                 this._box.add_child(this._cpuFrequencyBracketEnd);
                 this._box.add_child(this._cpuLoadAverageBracketStart);
                 this._box.add_child(this._cpuLoadAverageValue);
@@ -490,14 +444,12 @@ const ResourceMonitor = GObject.registerClass(
               case "ram":
                 this._box.add_child(this._ramIcon);
                 this._box.add_child(this._ramValue);
-                this._box.add_child(this._ramUnit);
 
                 break;
 
               case "swap":
                 this._box.add_child(this._swapIcon);
                 this._box.add_child(this._swapValue);
-                this._box.add_child(this._swapUnit);
 
                 break;
 
@@ -516,14 +468,12 @@ const ResourceMonitor = GObject.registerClass(
               case "eth":
                 this._box.add_child(this._ethIcon);
                 this._box.add_child(this._ethValue);
-                this._box.add_child(this._ethUnit);
 
                 break;
 
               case "wlan":
                 this._box.add_child(this._wlanIcon);
                 this._box.add_child(this._wlanValue);
-                this._box.add_child(this._wlanUnit);
 
                 break;
 
@@ -547,15 +497,12 @@ const ResourceMonitor = GObject.registerClass(
             switch (element) {
               case "cpu":
                 this._box.add_child(this._cpuValue);
-                this._box.add_child(this._cpuUnit);
 
                 this._box.add_child(this._cpuTemperatureBracketStart);
                 this._box.add_child(this._cpuTemperatureValue);
-                this._box.add_child(this._cpuTemperatureUnit);
                 this._box.add_child(this._cpuTemperatureBracketEnd);
                 this._box.add_child(this._cpuFrequencyBracketStart);
                 this._box.add_child(this._cpuFrequencyValue);
-                this._box.add_child(this._cpuFrequencyUnit);
                 this._box.add_child(this._cpuFrequencyBracketEnd);
                 this._box.add_child(this._cpuLoadAverageBracketStart);
                 this._box.add_child(this._cpuLoadAverageValue);
@@ -566,14 +513,12 @@ const ResourceMonitor = GObject.registerClass(
 
               case "ram":
                 this._box.add_child(this._ramValue);
-                this._box.add_child(this._ramUnit);
                 this._box.add_child(this._ramIcon);
 
                 break;
 
               case "swap":
                 this._box.add_child(this._swapValue);
-                this._box.add_child(this._swapUnit);
                 this._box.add_child(this._swapIcon);
 
                 break;
@@ -592,14 +537,12 @@ const ResourceMonitor = GObject.registerClass(
 
               case "eth":
                 this._box.add_child(this._ethValue);
-                this._box.add_child(this._ethUnit);
                 this._box.add_child(this._ethIcon);
 
                 break;
 
               case "wlan":
                 this._box.add_child(this._wlanValue);
-                this._box.add_child(this._wlanUnit);
                 this._box.add_child(this._wlanIcon);
 
                 break;
@@ -1109,16 +1052,14 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
       this._basicItemStatus(
         (this._netWlanStatus && this._nmWlanStatus) ||
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1150,16 +1091,14 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
       this._basicItemStatus(
         (this._netWlanStatus && this._nmWlanStatus) ||
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1268,8 +1207,7 @@ const ResourceMonitor = GObject.registerClass(
           !this._cpuFrequencyStatus &&
           !this._cpuLoadAverageStatus,
         this._cpuIcon,
-        this._cpuValue,
-        this._cpuUnit
+        this._cpuValue
       );
     }
 
@@ -1298,7 +1236,6 @@ const ResourceMonitor = GObject.registerClass(
           !this._cpuLoadAverageStatus,
         this._cpuIcon,
         this._cpuFrequencyValue,
-        this._cpuFrequencyUnit,
         this._cpuFrequencyBracketStart,
         this._cpuFrequencyBracketEnd
       );
@@ -1374,8 +1311,7 @@ const ResourceMonitor = GObject.registerClass(
         this._ramStatus,
         true,
         this._ramIcon,
-        this._ramValue,
-        this._ramUnit
+        this._ramValue
       );
     }
 
@@ -1432,8 +1368,7 @@ const ResourceMonitor = GObject.registerClass(
         this._swapStatus,
         true,
         this._swapIcon,
-        this._swapValue,
-        this._swapUnit
+        this._swapValue
       );
     }
 
@@ -1627,16 +1562,14 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
       this._basicItemStatus(
         (this._netWlanStatus && this._nmWlanStatus) ||
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1670,8 +1603,7 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
     }
 
@@ -1700,8 +1632,7 @@ const ResourceMonitor = GObject.registerClass(
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1734,7 +1665,6 @@ const ResourceMonitor = GObject.registerClass(
           !this._cpuLoadAverageStatus,
         this._cpuIcon,
         this._cpuTemperatureValue,
-        this._cpuTemperatureUnit,
         this._cpuTemperatureBracketStart,
         this._cpuTemperatureBracketEnd
       );
@@ -2235,7 +2165,7 @@ const ResourceMonitor = GObject.registerClass(
           this._cpuValue.style = this._getUsageColor(cpuCurr, this._cpuColors);
 
           // Update CPU usage display with optional decimal precision
-          this._cpuValue.text = `${this._getValueFixed(cpuCurr)}`;
+          this._cpuValue.text = `${this._getValueFixed(cpuCurr)}%`;
         })
         .catch((error) =>
           console.error("[Resource_Monitor] Error reading cpu:", error)
@@ -2292,16 +2222,14 @@ const ResourceMonitor = GObject.registerClass(
           if (this._ramUnitType === "perc") {
             const percentValue = (100 * value) / total;
             this._ramValue.style = this._getUsageColor(value, this._ramColors);
-            this._ramValue.text = `${this._getValueFixed(percentValue)}`;
-            this._ramUnit.text = "%";
+            this._ramValue.text = `${this._getValueFixed(percentValue)}%`;
           } else {
             [value, unit] = this._convertValueToUnit(
               value,
               this._ramUnitMeasure
             );
             this._ramValue.style = this._getUsageColor(value, this._ramColors);
-            this._ramValue.text = `${this._getValueFixed(value)}`;
-            this._ramUnit.text = unit;
+            this._ramValue.text = `${this._getValueFixed(value)}${unit}`;
           }
         })
         .catch((error) =>
@@ -2362,8 +2290,7 @@ const ResourceMonitor = GObject.registerClass(
               value,
               this._swapColors
             );
-            this._swapValue.text = `${this._getValueFixed(percentValue)}`;
-            this._swapUnit.text = "%";
+            this._swapValue.text = `${this._getValueFixed(percentValue)}%`;
           } else {
             [value, unit] = this._convertValueToUnit(
               value,
@@ -2373,8 +2300,7 @@ const ResourceMonitor = GObject.registerClass(
               value,
               this._swapColors
             );
-            this._swapValue.text = `${this._getValueFixed(value)}`;
-            this._swapUnit.text = unit;
+            this._swapValue.text = `${this._getValueFixed(value)}${unit}`;
           }
         })
         .catch((error) =>
@@ -2416,8 +2342,7 @@ const ResourceMonitor = GObject.registerClass(
 
             this._diskStatsBox.update_element_value(
               filesystem,
-              `${this._getValueFixed(rw[0])}|${this._getValueFixed(rw[1])}`,
-              unit,
+              `${this._getValueFixed(rw[0])}|${this._getValueFixed(rw[1])}${unit}`,
               this._getUsageColor(rw, this._diskStatsColors)
             );
           };
@@ -2467,7 +2392,6 @@ const ResourceMonitor = GObject.registerClass(
                     this._diskStatsBox.update_element_value(
                       filesystem,
                       "--|--",
-                      "",
                       ""
                     );
                   }
@@ -2504,8 +2428,7 @@ const ResourceMonitor = GObject.registerClass(
 
               this._diskSpaceBox.update_element_value(
                 filesystem,
-                `${value}`,
-                "%",
+                `${value}%`,
                 this._getUsageColor(value, this._diskSpaceColors)
               );
             } else {
@@ -2522,8 +2445,7 @@ const ResourceMonitor = GObject.registerClass(
 
               this._diskSpaceBox.update_element_value(
                 filesystem,
-                `${this._getValueFixed(value)}`,
-                unit,
+                `${this._getValueFixed(value)}${unit}`,
                 this._getUsageColor(value, this._diskSpaceColors)
               );
             }
@@ -2677,8 +2599,7 @@ const ResourceMonitor = GObject.registerClass(
             value,
             this._cpuFrequencyColors
           );
-          this._cpuFrequencyValue.text = `${this._getValueFixed(value)}`;
-          this._cpuFrequencyUnit.text = unit;
+          this._cpuFrequencyValue.text = `${this._getValueFixed(value)}${unit}`;
         })
         .catch((error) =>
           console.error("[Resource_Monitor] Error reading cpu frequncy:", error)
@@ -2749,8 +2670,7 @@ const ResourceMonitor = GObject.registerClass(
 
                 this._cpuTemperatureValue.text = `${this._getValueFixed(
                   value
-                )}`;
-                this._cpuTemperatureUnit.text = unit;
+                )}${unit}`;
 
                 // Apply color based on thresholds
                 this._cpuTemperatureValue.style = this._getUsageColor(
@@ -2806,8 +2726,7 @@ const ResourceMonitor = GObject.registerClass(
             // GPU utilization
             this._gpuBox.update_element_value(
               uuid,
-              `${usage}`,
-              "%",
+              `${usage}%{unit}`,
               this._getUsageColor(usage, this._gpuColors)
             );
 
@@ -2831,8 +2750,7 @@ const ResourceMonitor = GObject.registerClass(
               const percentValue = (100 * memoryValue) / memoryTotal;
               this._gpuBox.update_element_memory_value(
                 uuid,
-                `${this._getValueFixed(percentValue)}`,
-                "%",
+                `${this._getValueFixed(percentValue)}%`,
                 this._getUsageColor(percentValue, this._gpuMemoryColors)
               );
             } else {
@@ -2843,8 +2761,7 @@ const ResourceMonitor = GObject.registerClass(
 
               this._gpuBox.update_element_memory_value(
                 uuid,
-                `${this._getValueFixed(memoryValue)}`,
-                memoryUnit,
+                `${this._getValueFixed(memoryValue)}${memoryUnit}`,
                 this._getUsageColor(memoryValue, this._gpuMemoryColors)
               );
             }
@@ -2855,8 +2772,7 @@ const ResourceMonitor = GObject.registerClass(
 
             this._gpuBox.update_element_thermal_value(
               uuid,
-              `${this._getValueFixed(tempValue)}`,
-              tempUnit,
+              `${this._getValueFixed(tempValue)}${tempUnit}`,
               this._getUsageColor(tempValue, this._thermalGpuColors)
             );
           });
@@ -2970,7 +2886,6 @@ const DiskContainer = GObject.registerClass(
       this._elementsName = [];
       this._elementsLabel = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
     }
 
     set_element_width(width) {
@@ -2993,7 +2908,6 @@ const DiskContainer = GObject.registerClass(
       this._elementsName = [];
       this._elementsLabel = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
 
       this.remove_all_children();
     }
@@ -3022,14 +2936,7 @@ const DiskContainerStats = GObject.registerClass(
         x_align: Clutter.ActorAlign.END,
       });
 
-      this._elementsUnit["single"] = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._elementsUnit["single"].set_style("padding-left: 0.125em;");
-
       this.add_child(this._elementsValue["single"]);
-      this.add_child(this._elementsUnit["single"]);
 
       this.idleOld["single"] = 0;
       this.rwTotOld["single"] = [0, 0];
@@ -3051,15 +2958,8 @@ const DiskContainerStats = GObject.registerClass(
         x_align: Clutter.ActorAlign.END,
       });
 
-      this._elementsUnit[filesystem] = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._elementsUnit[filesystem].set_style("padding-left: 0.125em;");
-
       this.add_child(this._elementsName[filesystem]);
       this.add_child(this._elementsValue[filesystem]);
-      this.add_child(this._elementsUnit[filesystem]);
 
       this.idleOld[filesystem] = 0;
       this.rwTotOld[filesystem] = [0, 0];
@@ -3072,10 +2972,8 @@ const DiskContainerStats = GObject.registerClass(
             if (element !== "single") {
               this._elementsName[element].hide();
               this._elementsValue[element].hide();
-              this._elementsUnit[element].hide();
             } else {
               this._elementsValue[element].show();
-              this._elementsUnit[element].show();
             }
           });
 
@@ -3088,10 +2986,8 @@ const DiskContainerStats = GObject.registerClass(
             if (element !== "single") {
               this._elementsName[element].show();
               this._elementsValue[element].show();
-              this._elementsUnit[element].show();
             } else {
               this._elementsValue[element].hide();
-              this._elementsUnit[element].hide();
             }
           });
 
@@ -3119,11 +3015,10 @@ const DiskContainerStats = GObject.registerClass(
       this.rwTotOld[filesystem] = rwTot;
     }
 
-    update_element_value(filesystem, value, unit, style = "") {
+    update_element_value(filesystem, value, style = "") {
       if (this._elementsValue[filesystem]) {
         this._elementsValue[filesystem].text = value;
         this._elementsValue[filesystem].style = style;
-        this._elementsUnit[filesystem].text = unit;
       }
     }
   }
@@ -3147,22 +3042,14 @@ const DiskContainerSpace = GObject.registerClass(
         x_align: Clutter.ActorAlign.END,
       });
 
-      this._elementsUnit[filesystem] = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: this._diskSpaceUnitType ? "%" : "KB",
-      });
-      this._elementsUnit[filesystem].set_style("padding-left: 0.125em;");
-
       this.add_child(this._elementsName[filesystem]);
       this.add_child(this._elementsValue[filesystem]);
-      this.add_child(this._elementsUnit[filesystem]);
     }
 
-    update_element_value(filesystem, value, unit, style = "") {
+    update_element_value(filesystem, value, style = "") {
       if (this._elementsValue[filesystem]) {
         this._elementsValue[filesystem].text = value;
         this._elementsValue[filesystem].style = style;
-        this._elementsUnit[filesystem].text = unit;
       }
     }
   }
@@ -3176,11 +3063,8 @@ const GpuContainer = GObject.registerClass(
       this._elementsUuid = [];
       this._elementsName = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
       this._elementsMemoryValue = [];
-      this._elementsMemoryUnit = [];
       this._elementsThermalValue = [];
-      this._elementsThermalUnit = [];
     }
 
     set_element_width(width) {
@@ -3236,11 +3120,8 @@ const GpuContainer = GObject.registerClass(
       this._elementsUuid = [];
       this._elementsName = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
       this._elementsMemoryValue = [];
-      this._elementsMemoryUnit = [];
       this._elementsThermalValue = [];
-      this._elementsThermalUnit = [];
 
       this.remove_all_children();
     }
@@ -3266,12 +3147,6 @@ const GpuContainer = GObject.registerClass(
           x_align: Clutter.ActorAlign.END,
         });
 
-        this._elementsUnit[uuid] = new St.Label({
-          y_align: Clutter.ActorAlign.CENTER,
-          text: "%",
-        });
-        this._elementsUnit[uuid].set_style("padding-left: 0.125em;");
-
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3279,7 +3154,6 @@ const GpuContainer = GObject.registerClass(
           })
         );
         this.add_child(this._elementsValue[uuid]);
-        this.add_child(this._elementsUnit[uuid]);
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3298,12 +3172,6 @@ const GpuContainer = GObject.registerClass(
           x_align: Clutter.ActorAlign.END,
         });
 
-        this._elementsMemoryUnit[uuid] = new St.Label({
-          y_align: Clutter.ActorAlign.CENTER,
-          text: this._gpuMemoryUnitType ? "%" : "KB",
-        });
-        this._elementsMemoryUnit[uuid].set_style("padding-left: 0.125em;");
-
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3311,7 +3179,6 @@ const GpuContainer = GObject.registerClass(
           })
         );
         this.add_child(this._elementsMemoryValue[uuid]);
-        this.add_child(this._elementsMemoryUnit[uuid]);
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3330,12 +3197,6 @@ const GpuContainer = GObject.registerClass(
           x_align: Clutter.ActorAlign.END,
         });
 
-        this._elementsThermalUnit[uuid] = new St.Label({
-          y_align: Clutter.ActorAlign.CENTER,
-          text: "Â°C",
-        });
-        this._elementsThermalUnit[uuid].set_style("padding-left: 0.125em;");
-
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3343,7 +3204,6 @@ const GpuContainer = GObject.registerClass(
           })
         );
         this.add_child(this._elementsThermalValue[uuid]);
-        this.add_child(this._elementsThermalUnit[uuid]);
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3353,27 +3213,24 @@ const GpuContainer = GObject.registerClass(
       }
     }
 
-    update_element_value(uuid, value, unit, style = "") {
+    update_element_value(uuid, value, style = "") {
       if (this._elementsValue[uuid]) {
         this._elementsValue[uuid].text = value;
         this._elementsValue[uuid].style = style;
-        this._elementsUnit[uuid].text = unit;
       }
     }
 
-    update_element_memory_value(uuid, value, unit, style = "") {
+    update_element_memory_value(uuid, value, style = "") {
       if (this._elementsMemoryValue[uuid]) {
         this._elementsMemoryValue[uuid].text = value;
         this._elementsMemoryValue[uuid].style = style;
-        this._elementsMemoryUnit[uuid].text = unit;
       }
     }
 
-    update_element_thermal_value(uuid, value, unit, style = "") {
+    update_element_thermal_value(uuid, value, style = "") {
       if (this._elementsThermalValue[uuid]) {
         this._elementsThermalValue[uuid].text = value;
         this._elementsThermalValue[uuid].style = style;
-        this._elementsThermalUnit[uuid].text = unit;
       }
     }
   }
