diff --git a/extension.js b/extension.js
index ad544d2..3b78467 100644
--- a/extension.js
+++ b/extension.js
@@ -229,49 +229,6 @@ const ResourceMonitor = GObject.registerClass(
         style_class: "system-status-icon",
       });
 
-      // Unit
-      this._cpuTemperatureUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "Â°C",
-      });
-      this._cpuTemperatureUnit.set_style("padding-left: 0.125em;");
-
-      this._cpuFrequencyUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "KHz",
-      });
-      this._cpuFrequencyUnit.set_style("padding-left: 0.125em;");
-
-      this._cpuUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "%",
-      });
-      this._cpuUnit.set_style("padding-left: 0.125em;");
-
-      this._ramUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: this._ramUnitType ? "%" : "KB",
-      });
-      this._ramUnit.set_style("padding-left: 0.125em;");
-
-      this._swapUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: this._swapUnitType ? "%" : "KB",
-      });
-      this._swapUnit.set_style("padding-left: 0.125em;");
-
-      this._ethUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._ethUnit.set_style("padding-left: 0.125em;");
-
-      this._wlanUnit = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._wlanUnit.set_style("padding-left: 0.125em;");
-
       // Value
       this._cpuValue = new St.Label({
         y_align: Clutter.ActorAlign.CENTER,
@@ -346,13 +303,10 @@ const ResourceMonitor = GObject.registerClass(
               case "cpu":
                 this._box.add_child(this._cpuIcon);
                 this._box.add_child(this._cpuValue);
-                this._box.add_child(this._cpuUnit);
 
                 this._box.add_child(this._cpuTemperatureValue);
-                this._box.add_child(this._cpuTemperatureUnit);
                 this._box.add_child(this._cpuTemperatureValueBracket);
                 this._box.add_child(this._cpuFrequencyValue);
-                this._box.add_child(this._cpuFrequencyUnit);
                 this._box.add_child(this._cpuFrequencyValueBracket);
                 this._box.add_child(this._cpuLoadAverageValue);
 
@@ -361,14 +315,12 @@ const ResourceMonitor = GObject.registerClass(
               case "ram":
                 this._box.add_child(this._ramIcon);
                 this._box.add_child(this._ramValue);
-                this._box.add_child(this._ramUnit);
 
                 break;
 
               case "swap":
                 this._box.add_child(this._swapIcon);
                 this._box.add_child(this._swapValue);
-                this._box.add_child(this._swapUnit);
 
                 break;
 
@@ -387,14 +339,12 @@ const ResourceMonitor = GObject.registerClass(
               case "eth":
                 this._box.add_child(this._ethIcon);
                 this._box.add_child(this._ethValue);
-                this._box.add_child(this._ethUnit);
 
                 break;
 
               case "wlan":
                 this._box.add_child(this._wlanIcon);
                 this._box.add_child(this._wlanValue);
-                this._box.add_child(this._wlanUnit);
 
                 break;
 
@@ -418,13 +368,10 @@ const ResourceMonitor = GObject.registerClass(
             switch (element) {
               case "cpu":
                 this._box.add_child(this._cpuValue);
-                this._box.add_child(this._cpuUnit);
 
                 this._box.add_child(this._cpuTemperatureValue);
-                this._box.add_child(this._cpuTemperatureUnit);
                 this._box.add_child(this._cpuTemperatureValueBracket);
                 this._box.add_child(this._cpuFrequencyValue);
-                this._box.add_child(this._cpuFrequencyUnit);
                 this._box.add_child(this._cpuFrequencyValueBracket);
                 this._box.add_child(this._cpuLoadAverageValue);
                 this._box.add_child(this._cpuIcon);
@@ -433,14 +380,12 @@ const ResourceMonitor = GObject.registerClass(
 
               case "ram":
                 this._box.add_child(this._ramValue);
-                this._box.add_child(this._ramUnit);
                 this._box.add_child(this._ramIcon);
 
                 break;
 
               case "swap":
                 this._box.add_child(this._swapValue);
-                this._box.add_child(this._swapUnit);
                 this._box.add_child(this._swapIcon);
 
                 break;
@@ -459,14 +404,12 @@ const ResourceMonitor = GObject.registerClass(
 
               case "eth":
                 this._box.add_child(this._ethValue);
-                this._box.add_child(this._ethUnit);
                 this._box.add_child(this._ethIcon);
 
                 break;
 
               case "wlan":
                 this._box.add_child(this._wlanValue);
-                this._box.add_child(this._wlanUnit);
                 this._box.add_child(this._wlanIcon);
 
                 break;
@@ -875,16 +818,14 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
       this._basicItemStatus(
         (this._netWlanStatus && this._nmWlanStatus) ||
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -916,16 +857,14 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
       this._basicItemStatus(
         (this._netWlanStatus && this._nmWlanStatus) ||
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1034,8 +973,7 @@ const ResourceMonitor = GObject.registerClass(
           !this._cpuFrequencyStatus &&
           !this._cpuLoadAverageStatus,
         this._cpuIcon,
-        this._cpuValue,
-        this._cpuUnit
+        this._cpuValue
       );
     }
 
@@ -1056,7 +994,6 @@ const ResourceMonitor = GObject.registerClass(
           !this._cpuLoadAverageStatus,
         this._cpuIcon,
         this._cpuFrequencyValue,
-        this._cpuFrequencyUnit,
         this._cpuFrequencyValueBracket
       );
     }
@@ -1108,8 +1045,7 @@ const ResourceMonitor = GObject.registerClass(
         this._ramStatus,
         true,
         this._ramIcon,
-        this._ramValue,
-        this._ramUnit
+        this._ramValue
       );
     }
 
@@ -1150,8 +1086,7 @@ const ResourceMonitor = GObject.registerClass(
         this._swapStatus,
         true,
         this._swapIcon,
-        this._swapValue,
-        this._swapUnit
+        this._swapValue
       );
     }
 
@@ -1309,16 +1244,14 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
       this._basicItemStatus(
         (this._netWlanStatus && this._nmWlanStatus) ||
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1352,8 +1285,7 @@ const ResourceMonitor = GObject.registerClass(
           (this._netEthStatus && !this._netAutoHideStatus),
         true,
         this._ethIcon,
-        this._ethValue,
-        this._ethUnit
+        this._ethValue
       );
     }
 
@@ -1371,8 +1303,7 @@ const ResourceMonitor = GObject.registerClass(
           (this._netWlanStatus && !this._netAutoHideStatus),
         true,
         this._wlanIcon,
-        this._wlanValue,
-        this._wlanUnit
+        this._wlanValue
       );
     }
 
@@ -1394,7 +1325,6 @@ const ResourceMonitor = GObject.registerClass(
           !this._cpuLoadAverageStatus,
         this._cpuIcon,
         this._cpuTemperatureValue,
-        this._cpuTemperatureUnit,
         this._cpuTemperatureValueBracket
       );
     }
@@ -1716,9 +1646,9 @@ const ResourceMonitor = GObject.registerClass(
         this._cpuIdleOld = idle;
 
         if (this._decimalsStatus) {
-          this._cpuValue.text = `${cpuCurr.toFixed(1)}`;
+          this._cpuValue.text = `${cpuCurr.toFixed(1)}%`;
         } else {
-          this._cpuValue.text = `${cpuCurr.toFixed(0)}`;
+          this._cpuValue.text = `${cpuCurr.toFixed(0)}%`;
         }
       });
     }
@@ -1763,13 +1693,11 @@ const ResourceMonitor = GObject.registerClass(
         switch (this._ramUnitType) {
           case "perc":
             if (this._decimalsStatus) {
-              this._ramValue.text = `${((100 * value) / total).toFixed(1)}`;
+              this._ramValue.text = `${((100 * value) / total).toFixed(1)}%`;
             } else {
-              this._ramValue.text = `${((100 * value) / total).toFixed(0)}`;
+              this._ramValue.text = `${((100 * value) / total).toFixed(0)}%`;
             }
 
-            this._ramUnit.text = "%";
-
             break;
 
           case "numeric":
@@ -1820,13 +1748,11 @@ const ResourceMonitor = GObject.registerClass(
             }
 
             if (this._decimalsStatus) {
-              this._ramValue.text = `${value.toFixed(1)}`;
+              this._ramValue.text = `${value.toFixed(1)}${unit}`;
             } else {
-              this._ramValue.text = `${value.toFixed(0)}`;
+              this._ramValue.text = `${value.toFixed(0)}${unit}`;
             }
 
-            this._ramUnit.text = unit;
-
             break;
         }
       });
@@ -1872,13 +1798,11 @@ const ResourceMonitor = GObject.registerClass(
         switch (this._swapUnitType) {
           case "perc":
             if (this._decimalsStatus) {
-              this._swapValue.text = `${((100 * value) / total).toFixed(1)}`;
+              this._swapValue.text = `${((100 * value) / total).toFixed(1)}%`;
             } else {
-              this._swapValue.text = `${((100 * value) / total).toFixed(0)}`;
+              this._swapValue.text = `${((100 * value) / total).toFixed(0)}%`;
             }
 
-            this._swapUnit.text = "%";
-
             break;
 
           case "numeric":
@@ -1929,13 +1853,11 @@ const ResourceMonitor = GObject.registerClass(
             }
 
             if (this._decimalsStatus) {
-              this._swapValue.text = `${value.toFixed(1)}`;
+              this._swapValue.text = `${value.toFixed(1)}${unit}`;
             } else {
-              this._swapValue.text = `${value.toFixed(0)}`;
+              this._swapValue.text = `${value.toFixed(0)}${unit}`;
             }
 
-            this._swapUnit.text = unit;
-
             break;
         }
       });
@@ -2043,14 +1965,12 @@ const ResourceMonitor = GObject.registerClass(
             if (this._decimalsStatus) {
               this._diskStatsBox.update_element_value(
                 filesystem,
-                `${rw[0].toFixed(1)}|${rw[1].toFixed(1)}`,
-                unit
+                `${rw[0].toFixed(1)}|${rw[1].toFixed(1)}${unit}`
               );
             } else {
               this._diskStatsBox.update_element_value(
                 filesystem,
-                `${rw[0].toFixed(0)}|${rw[1].toFixed(0)}`,
-                unit
+                `${rw[0].toFixed(0)}|${rw[1].toFixed(0)}${unit}`
               );
             }
 
@@ -2152,22 +2072,19 @@ const ResourceMonitor = GObject.registerClass(
                 if (this._decimalsStatus) {
                   this._diskStatsBox.update_element_value(
                     filesystem,
-                    `${rw[0].toFixed(1)}|${rw[1].toFixed(1)}`,
-                    unit
+                    `${rw[0].toFixed(1)}|${rw[1].toFixed(1)}${unit}`
                   );
                 } else {
                   this._diskStatsBox.update_element_value(
                     filesystem,
-                    `${rw[0].toFixed(0)}|${rw[1].toFixed(0)}`,
-                    unit
+                    `${rw[0].toFixed(0)}|${rw[1].toFixed(0)}${unit}`
                   );
                 }
               } else {
                 // Not found
                 this._diskStatsBox.update_element_value(
                   filesystem,
-                  "--|--",
-                  ""
+                  "--|--"
                 );
               }
             }
@@ -2215,7 +2132,7 @@ const ResourceMonitor = GObject.registerClass(
                   break;
               }
 
-              this._diskSpaceBox.update_element_value(filesystem, value, "%");
+              this._diskSpaceBox.update_element_value(filesystem, value+"%");
 
               break;
 
@@ -2283,14 +2200,12 @@ const ResourceMonitor = GObject.registerClass(
               if (this._decimalsStatus) {
                 this._diskSpaceBox.update_element_value(
                   filesystem,
-                  `${value.toFixed(1)}`,
-                  unit
+                  `${value.toFixed(1)}${unit}`
                 );
               } else {
                 this._diskSpaceBox.update_element_value(
                   filesystem,
-                  `${value.toFixed(0)}`,
-                  unit
+                  `${value.toFixed(0)}${unit}`
                 );
               }
 
@@ -2327,6 +2242,7 @@ const ResourceMonitor = GObject.registerClass(
         const boolUnit = this._netUnit === "bits";
 
         const factor = boolUnit ? 8 : 1;
+        let unit = "";
 
         if (delta > 0) {
           for (let i = 0; i < 2; i++) {
@@ -2336,17 +2252,17 @@ const ResourceMonitor = GObject.registerClass(
 
           switch (this._netUnitMeasure) {
             case "b":
-              this._ethUnit.text = boolUnit ? "b" : "B";
+              unit = boolUnit ? "b" : "B";
               break;
 
             case "k":
-              this._ethUnit.text = boolUnit ? "k" : "K";
+              unit = boolUnit ? "k" : "K";
               du[0] /= 1024;
               du[1] /= 1024;
               break;
 
             case "m":
-              this._ethUnit.text = boolUnit ? "m" : "M";
+              unit = boolUnit ? "m" : "M";
               du[0] /= 1024;
               du[1] /= 1024;
               du[0] /= 1024;
@@ -2354,7 +2270,7 @@ const ResourceMonitor = GObject.registerClass(
               break;
 
             case "g":
-              this._ethUnit.text = boolUnit ? "g" : "G";
+              unit = boolUnit ? "g" : "G";
               du[0] /= 1024;
               du[1] /= 1024;
               du[0] /= 1024;
@@ -2364,7 +2280,7 @@ const ResourceMonitor = GObject.registerClass(
               break;
 
             case "t":
-              this._ethUnit.text = boolUnit ? "t" : "T";
+              unit = boolUnit ? "t" : "T";
               du[0] /= 1024;
               du[1] /= 1024;
               du[0] /= 1024;
@@ -2379,26 +2295,26 @@ const ResourceMonitor = GObject.registerClass(
 
             default:
               if (du[0] > 1024 || du[1] > 1024) {
-                this._ethUnit.text = boolUnit ? "k" : "K";
+                unit = boolUnit ? "k" : "K";
                 du[0] /= 1024;
                 du[1] /= 1024;
                 if (du[0] > 1024 || du[1] > 1024) {
-                  this._ethUnit.text = boolUnit ? "m" : "M";
+                  unit = boolUnit ? "m" : "M";
                   du[0] /= 1024;
                   du[1] /= 1024;
                   if (du[0] > 1024 || du[1] > 1024) {
-                    this._ethUnit.text = boolUnit ? "g" : "G";
+                    unit = boolUnit ? "g" : "G";
                     du[0] /= 1024;
                     du[1] /= 1024;
                     if (du[0] > 1024 || du[1] > 1024) {
-                      this._ethUnit.text = boolUnit ? "t" : "T";
+                      unit = boolUnit ? "t" : "T";
                       du[0] /= 1024;
                       du[1] /= 1024;
                     }
                   }
                 }
               } else {
-                this._ethUnit.text = boolUnit ? "b" : "B";
+                unit = boolUnit ? "b" : "B";
               }
 
               break;
@@ -2408,9 +2324,9 @@ const ResourceMonitor = GObject.registerClass(
         this._ethIdleOld = idle;
 
         if (this._decimalsStatus) {
-          this._ethValue.text = `${du[0].toFixed(1)}|${du[1].toFixed(1)}`;
+          this._ethValue.text = `${du[0].toFixed(1)}|${du[1].toFixed(1)}${unit}`;
         } else {
-          this._ethValue.text = `${du[0].toFixed(0)}|${du[1].toFixed(0)}`;
+          this._ethValue.text = `${du[0].toFixed(0)}|${du[1].toFixed(0)}${unit}`;
         }
       });
     }
@@ -2443,6 +2359,8 @@ const ResourceMonitor = GObject.registerClass(
 
         const factor = boolUnit ? 8 : 1;
 
+        let unit = "";
+
         if (delta > 0) {
           for (let i = 0; i < 2; i++) {
             du[i] = ((duTot[i] - this._duTotWlanOld[i]) * factor) / delta;
@@ -2451,17 +2369,17 @@ const ResourceMonitor = GObject.registerClass(
 
           switch (this._netUnitMeasure) {
             case "b":
-              this._wlanUnit.text = boolUnit ? "b" : "B";
+              unit = boolUnit ? "b" : "B";
               break;
 
             case "k":
-              this._wlanUnit.text = boolUnit ? "k" : "K";
+              unit = boolUnit ? "k" : "K";
               du[0] /= 1024;
               du[1] /= 1024;
               break;
 
             case "m":
-              this._wlanUnit.text = boolUnit ? "m" : "M";
+              unit = boolUnit ? "m" : "M";
               du[0] /= 1024;
               du[1] /= 1024;
               du[0] /= 1024;
@@ -2469,7 +2387,7 @@ const ResourceMonitor = GObject.registerClass(
               break;
 
             case "g":
-              this._wlanUnit.text = boolUnit ? "g" : "G";
+              unit = boolUnit ? "g" : "G";
               du[0] /= 1024;
               du[1] /= 1024;
               du[0] /= 1024;
@@ -2479,7 +2397,7 @@ const ResourceMonitor = GObject.registerClass(
               break;
 
             case "t":
-              this._wlanUnit.text = boolUnit ? "t" : "T";
+              unit = boolUnit ? "t" : "T";
               du[0] /= 1024;
               du[1] /= 1024;
               du[0] /= 1024;
@@ -2494,26 +2412,26 @@ const ResourceMonitor = GObject.registerClass(
 
             default:
               if (du[0] > 1024 || du[1] > 1024) {
-                this._wlanUnit.text = boolUnit ? "k" : "K";
+                unit = boolUnit ? "k" : "K";
                 du[0] /= 1024;
                 du[1] /= 1024;
                 if (du[0] > 1024 || du[1] > 1024) {
-                  this._wlanUnit.text = boolUnit ? "m" : "M";
+                  unit = boolUnit ? "m" : "M";
                   du[0] /= 1024;
                   du[1] /= 1024;
                   if (du[0] > 1024 || du[1] > 1024) {
-                    this._wlanUnit.text = boolUnit ? "g" : "G";
+                    unit = boolUnit ? "g" : "G";
                     du[0] /= 1024;
                     du[1] /= 1024;
                     if (du[0] > 1024 || du[1] > 1024) {
-                      this._wlanUnit.text = boolUnit ? "t" : "T";
+                      unit = boolUnit ? "t" : "T";
                       du[0] /= 1024;
                       du[1] /= 1024;
                     }
                   }
                 }
               } else {
-                this._wlanUnit.text = boolUnit ? "b" : "B";
+                unit = boolUnit ? "b" : "B";
               }
 
               break;
@@ -2523,9 +2441,9 @@ const ResourceMonitor = GObject.registerClass(
         this._wlanIdleOld = idle;
 
         if (this._decimalsStatus) {
-          this._wlanValue.text = `${du[0].toFixed(1)}|${du[1].toFixed(1)}`;
+          this._wlanValue.text = `${du[0].toFixed(1)}|${du[1].toFixed(1)}${unit}`;
         } else {
-          this._wlanValue.text = `${du[0].toFixed(0)}|${du[1].toFixed(0)}`;
+          this._wlanValue.text = `${du[0].toFixed(0)}|${du[1].toFixed(0)}${unit}`;
         }
       });
     }
@@ -2579,14 +2497,13 @@ const ResourceMonitor = GObject.registerClass(
           this._cpuFrequencyUnit.text = unit;
 
           if (this._decimalsStatus) {
-            this._cpuFrequencyValue.text = `[${value.toFixed(2)}`;
+            this._cpuFrequencyValue.text = `[${value.toFixed(2)}${unit}`;
           } else {
-            this._cpuFrequencyValue.text = `[${value.toFixed(0)}`;
+            this._cpuFrequencyValue.text = `[${value.toFixed(0)}${unit}`;
           }
         });
       } else {
         this._cpuFrequencyValue.text = _("[Frequency Error");
-        this._cpuFrequencyUnit.text = "";
       }
     }
 
@@ -2635,19 +2552,20 @@ const ResourceMonitor = GObject.registerClass(
                 this._thermalCpuTemperatureDevicesList.length
               ) {
                 // Temperatures Average
+                let unit = "";
                 this._cpuTemperatures /= this._cpuTemperaturesReads;
 
                 switch (this._thermalTemperatureUnit) {
                   case "f":
                     this._cpuTemperatures = this._cpuTemperatures * 1.8 + 32;
-                    this._cpuTemperatureUnit.text = "Â°F";
+                    unit = "Â°F";
 
                     break;
 
                   case "c":
 
                   default:
-                    this._cpuTemperatureUnit.text = "Â°C";
+                    unit = "Â°C";
 
                     break;
                 }
@@ -2655,11 +2573,11 @@ const ResourceMonitor = GObject.registerClass(
                 if (this._decimalsStatus) {
                   this._cpuTemperatureValue.text = `[${this._cpuTemperatures.toFixed(
                     1
-                  )}`;
+                  )}${unit}`;
                 } else {
                   this._cpuTemperatureValue.text = `[${this._cpuTemperatures.toFixed(
                     0
-                  )}`;
+                  )}${unit}`;
                 }
 
                 this._cpuTemperatures = 0;
@@ -2668,7 +2586,6 @@ const ResourceMonitor = GObject.registerClass(
             });
           } else {
             this._cpuTemperatureValue.text = _("[Temperature Error");
-            this._cpuTemperatureUnit.text = "";
           }
         }
       } else {
@@ -2710,7 +2627,7 @@ const ResourceMonitor = GObject.registerClass(
           memoryUsed *= 1.024;
           memoryFree *= 1.024;
 
-          this._gpuBox.update_element_value(uuid, usage, "%");
+          this._gpuBox.update_element_value(uuid, usage+"%");
 
           let value = 0;
           let unit = "KB";
@@ -2948,7 +2865,6 @@ const DiskContainer = GObject.registerClass(
       this._elementsName = [];
       this._elementsLabel = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
     }
 
     set_element_width(width) {
@@ -2971,7 +2887,6 @@ const DiskContainer = GObject.registerClass(
       this._elementsName = [];
       this._elementsLabel = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
 
       this.remove_all_children();
     }
@@ -2998,14 +2913,7 @@ const DiskContainerStats = GObject.registerClass(
       });
       this._elementsValue["single"].set_style("text-align: right;");
 
-      this._elementsUnit["single"] = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._elementsUnit["single"].set_style("padding-left: 0.125em;");
-
       this.add_child(this._elementsValue["single"]);
-      this.add_child(this._elementsUnit["single"]);
 
       this.idleOld["single"] = 0;
       this.rwTotOld["single"] = [0, 0];
@@ -3025,15 +2933,8 @@ const DiskContainerStats = GObject.registerClass(
       });
       this._elementsValue[filesystem].set_style("text-align: right;");
 
-      this._elementsUnit[filesystem] = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: "K",
-      });
-      this._elementsUnit[filesystem].set_style("padding-left: 0.125em;");
-
       this.add_child(this._elementsName[filesystem]);
       this.add_child(this._elementsValue[filesystem]);
-      this.add_child(this._elementsUnit[filesystem]);
 
       this.idleOld[filesystem] = 0;
       this.rwTotOld[filesystem] = [0, 0];
@@ -3046,10 +2947,8 @@ const DiskContainerStats = GObject.registerClass(
             if (element !== "single") {
               this._elementsName[element].hide();
               this._elementsValue[element].hide();
-              this._elementsUnit[element].hide();
             } else {
               this._elementsValue[element].show();
-              this._elementsUnit[element].show();
             }
           });
 
@@ -3062,10 +2961,8 @@ const DiskContainerStats = GObject.registerClass(
             if (element !== "single") {
               this._elementsName[element].show();
               this._elementsValue[element].show();
-              this._elementsUnit[element].show();
             } else {
               this._elementsValue[element].hide();
-              this._elementsUnit[element].hide();
             }
           });
 
@@ -3093,10 +2990,9 @@ const DiskContainerStats = GObject.registerClass(
       this.rwTotOld[filesystem] = rwTot;
     }
 
-    update_element_value(filesystem, value, unit) {
+    update_element_value(filesystem, value) {
       if (this._elementsValue[filesystem]) {
         this._elementsValue[filesystem].text = value;
-        this._elementsUnit[filesystem].text = unit;
       }
     }
   }
@@ -3118,21 +3014,13 @@ const DiskContainerSpace = GObject.registerClass(
       });
       this._elementsValue[filesystem].set_style("text-align: right;");
 
-      this._elementsUnit[filesystem] = new St.Label({
-        y_align: Clutter.ActorAlign.CENTER,
-        text: this._diskSpaceUnitType ? "%" : "KB",
-      });
-      this._elementsUnit[filesystem].set_style("padding-left: 0.125em;");
-
       this.add_child(this._elementsName[filesystem]);
       this.add_child(this._elementsValue[filesystem]);
-      this.add_child(this._elementsUnit[filesystem]);
     }
 
-    update_element_value(filesystem, value, unit) {
+    update_element_value(filesystem, value) {
       if (this._elementsValue[filesystem]) {
         this._elementsValue[filesystem].text = value;
-        this._elementsUnit[filesystem].text = unit;
       }
     }
   }
@@ -3146,7 +3034,6 @@ const GpuContainer = GObject.registerClass(
       this._elementsUuid = [];
       this._elementsName = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
       this._elementsMemoryValue = [];
       this._elementsMemoryUnit = [];
       this._elementsThermalValue = [];
@@ -3206,7 +3093,6 @@ const GpuContainer = GObject.registerClass(
       this._elementsUuid = [];
       this._elementsName = [];
       this._elementsValue = [];
-      this._elementsUnit = [];
       this._elementsMemoryValue = [];
       this._elementsMemoryUnit = [];
       this._elementsThermalValue = [];
@@ -3234,12 +3120,6 @@ const GpuContainer = GObject.registerClass(
         });
         this._elementsValue[uuid].set_style("text-align: right;");
 
-        this._elementsUnit[uuid] = new St.Label({
-          y_align: Clutter.ActorAlign.CENTER,
-          text: "%",
-        });
-        this._elementsUnit[uuid].set_style("padding-left: 0.125em;");
-
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3247,7 +3127,6 @@ const GpuContainer = GObject.registerClass(
           })
         );
         this.add_child(this._elementsValue[uuid]);
-        this.add_child(this._elementsUnit[uuid]);
         this.add_child(
           new St.Label({
             y_align: Clutter.ActorAlign.CENTER,
@@ -3317,10 +3196,9 @@ const GpuContainer = GObject.registerClass(
       }
     }
 
-    update_element_value(uuid, value, unit) {
+    update_element_value(uuid, value) {
       if (this._elementsValue[uuid]) {
         this._elementsValue[uuid].text = value;
-        this._elementsUnit[uuid].text = unit;
       }
     }
 
